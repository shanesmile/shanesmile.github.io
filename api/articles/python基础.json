{"title":"Python基础","slug":"Python基础","date":"2019-09-18T12:22:26.000Z","updated":"2019-09-19T10:24:11.370Z","comments":true,"path":"api/articles/Python基础.json","photos":[],"link":"","excerpt":"1. 基本语法1.1 标识符：第一个字符必须是字母表中字母或下划线 _ 。<br>标识符的其他的部分由字母、数字和下划线组成。<br>标识符对大小写敏感。","covers":null,"content":"<h1 id=\"1-基本语法\"><a href=\"#1-基本语法\" class=\"headerlink\" title=\"1. 基本语法\"></a>1. 基本语法</h1><h2 id=\"1-1-标识符：\"><a href=\"#1-1-标识符：\" class=\"headerlink\" title=\"1.1 标识符：\"></a>1.1 标识符：</h2><p>第一个字符必须是字母表中字母或下划线 _ 。<br>标识符的其他的部分由字母、数字和下划线组成。<br>标识符对大小写敏感。</p>\n<a id=\"more\"></a>\n<h2 id=\"1-2-关键字（保留字）\"><a href=\"#1-2-关键字（保留字）\" class=\"headerlink\" title=\"1.2 关键字（保留字）\"></a>1.2 关键字（保留字）</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> keyword</span><br><span class=\"line\">print(keyword.kwlist)</span><br><span class=\"line\">[<span class=\"string\">'False'</span>, <span class=\"string\">'None'</span>, <span class=\"string\">'True'</span>, <span class=\"string\">'and'</span>, <span class=\"string\">'as'</span>, <span class=\"string\">'assert'</span>, <span class=\"string\">'break'</span>, <span class=\"string\">'class'</span>, <span class=\"string\">'continue'</span>, <span class=\"string\">'def'</span>, <span class=\"string\">'del'</span>, <span class=\"string\">'elif'</span>, <span class=\"string\">'else'</span>, <span class=\"string\">'except'</span>, <span class=\"string\">'finally'</span>, <span class=\"string\">'for'</span>, <span class=\"string\">'from'</span>, <span class=\"string\">'global'</span>, <span class=\"string\">'if'</span>, <span class=\"string\">'import'</span>, <span class=\"string\">'in'</span>, <span class=\"string\">'is'</span>, <span class=\"string\">'lambda'</span>, <span class=\"string\">'nonlocal'</span>, <span class=\"string\">'not'</span>, <span class=\"string\">'or'</span>, <span class=\"string\">'pass'</span>, <span class=\"string\">'raise'</span>, <span class=\"string\">'return'</span>, <span class=\"string\">'try'</span>, <span class=\"string\">'while'</span>, <span class=\"string\">'with'</span>, <span class=\"string\">'yield'</span>]</span><br><span class=\"line\"><span class=\"comment\">#第一个注释</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">\"Hello, Data Mining!\"</span>) <span class=\"comment\"># 第二个注释</span></span><br><span class=\"line\">Hello, Data Mining!</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-缩进\"><a href=\"#1-3-缩进\" class=\"headerlink\" title=\"1.3 缩进\"></a>1.3 缩进</h2><p>python使用缩进来表示代码块</p>\n<p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数，一般使用4个空格的缩进</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"True\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"False\"</span>)</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>):</span><br><span class=\"line\">    print(<span class=\"string\">\"line:\"</span>,i)</span><br><span class=\"line\">line: <span class=\"number\">0</span></span><br><span class=\"line\">line: <span class=\"number\">1</span></span><br><span class=\"line\">line: <span class=\"number\">2</span></span><br><span class=\"line\">line: <span class=\"number\">3</span></span><br><span class=\"line\">line: <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-4-import-与-from…import\"><a href=\"#1-4-import-与-from…import\" class=\"headerlink\" title=\"1.4 import 与 from…import\"></a>1.4 import 与 from…import</h3><p>在 python 用 import 或者 from…import 来导入相应的模块。</p>\n<p>将整个模块(somemodule)导入，格式为： import somemodule</p>\n<p>从某个模块中导入某个函数,格式为： from somemodule import somefunction</p>\n<p>从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc</p>\n<p>将某个模块中的全部函数导入，格式为： from somemodule import *</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">print(<span class=\"string\">'================Python import mode=========================='</span>);</span><br><span class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">'命令行参数为:'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> sys.argv:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> (i)</span><br><span class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">'\\n python 路径为'</span>,sys.path)</span><br><span class=\"line\">================Python <span class=\"keyword\">import</span> mode==========================</span><br><span class=\"line\">命令行参数为:</span><br><span class=\"line\">C:\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py</span><br><span class=\"line\">-f</span><br><span class=\"line\">C:\\Users\\ray\\AppData\\Roaming\\jupyter\\runtime\\kernel-cface9ee-bf5e<span class=\"number\">-4</span>a3e-b349<span class=\"number\">-21841</span>b07a04a.json</span><br><span class=\"line\"></span><br><span class=\"line\"> python 路径为 [<span class=\"string\">''</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\python36.zip'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\DLLs'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib'</span>, <span class=\"string\">'C:\\\\Anaconda3'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib\\\\site-packages'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib\\\\site-packages\\\\win32'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib\\\\site-packages\\\\win32\\\\lib'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib\\\\site-packages\\\\Pythonwin'</span>, <span class=\"string\">'C:\\\\Anaconda3\\\\lib\\\\site-packages\\\\IPython\\\\extensions'</span>, <span class=\"string\">'C:\\\\Users\\\\ray\\\\.ipython'</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-5-输出函数\"><a href=\"#1-5-输出函数\" class=\"headerlink\" title=\"1.5 输出函数\"></a>1.5 输出函数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"This is the second lesson of Data Mining.\"</span>)</span><br><span class=\"line\">This <span class=\"keyword\">is</span> the second lesson of Data Mining.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-基本数据类型\"><a href=\"#2-基本数据类型\" class=\"headerlink\" title=\"2. 基本数据类型\"></a>2. 基本数据类型</h1><p>(1)Number（数字）, (2)String（字符串）, (3)List（列表）, (4)Tuple（元组）, (5)Set（集合）, (6)Dictionary（字典）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">counter = <span class=\"number\">100</span>          <span class=\"comment\"># 整型变量</span></span><br><span class=\"line\">miles = <span class=\"number\">1000.0</span>       <span class=\"comment\"># 浮点型变量</span></span><br><span class=\"line\">name = <span class=\"string\">\"runoob\"</span>     <span class=\"comment\"># 字符串</span></span><br><span class=\"line\">flag = <span class=\"literal\">False</span>      <span class=\"comment\">#bool型</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">print</span> (counter)</span><br><span class=\"line\"><span class=\"keyword\">print</span> (miles)</span><br><span class=\"line\"><span class=\"keyword\">print</span> (name)</span><br><span class=\"line\"><span class=\"keyword\">print</span> (flag)</span><br><span class=\"line\"><span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"number\">1000.0</span></span><br><span class=\"line\">runoob</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-1-字符串操作\"><a href=\"#2-1-字符串操作\" class=\"headerlink\" title=\"2.1 字符串操作\"></a>2.1 字符串操作</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">'Runoob'</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">print</span> (str)          <span class=\"comment\"># 输出字符串</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str[<span class=\"number\">0</span>:<span class=\"number\">-1</span>])    <span class=\"comment\"># 输出第一个到倒数第二个的所有字符</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str[<span class=\"number\">0</span>])       <span class=\"comment\"># 输出字符串第一个字符</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str[<span class=\"number\">2</span>:<span class=\"number\">5</span>])     <span class=\"comment\"># 输出从第三个开始到第五个的字符</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str[<span class=\"number\">2</span>:])      <span class=\"comment\"># 输出从第三个开始的后的所有字符</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str * <span class=\"number\">2</span>)      <span class=\"comment\"># 输出字符串两次</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (str + <span class=\"string\">\"TEST\"</span>) <span class=\"comment\"># 连接字符串</span></span><br><span class=\"line\">Runoob</span><br><span class=\"line\">Runoo</span><br><span class=\"line\">R</span><br><span class=\"line\">noo</span><br><span class=\"line\">noob</span><br><span class=\"line\">RunoobRunoob</span><br><span class=\"line\">RunoobTEST</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-List操作\"><a href=\"#2-2-List操作\" class=\"headerlink\" title=\"2.2 List操作\"></a>2.2 List操作</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list = [ <span class=\"string\">'abcd'</span>, <span class=\"number\">786</span> , <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span> ]</span><br><span class=\"line\">tinylist = [<span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">print</span> (list)            <span class=\"comment\"># 输出完整列表</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (list[<span class=\"number\">0</span>])         <span class=\"comment\"># 输出列表第一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (list[<span class=\"number\">1</span>:<span class=\"number\">3</span>])       <span class=\"comment\"># 从第二个开始输出到第三个元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (list[<span class=\"number\">2</span>:])        <span class=\"comment\"># 输出从第三个元素开始的所有元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tinylist * <span class=\"number\">2</span>)    <span class=\"comment\"># 输出两次列表</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (list + tinylist) <span class=\"comment\"># 连接列表</span></span><br><span class=\"line\">[<span class=\"string\">'abcd'</span>, <span class=\"number\">786</span>, <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>]</span><br><span class=\"line\">abcd</span><br><span class=\"line\">[<span class=\"number\">786</span>, <span class=\"number\">2.23</span>]</span><br><span class=\"line\">[<span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>]</span><br><span class=\"line\">[<span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>]</span><br><span class=\"line\">[<span class=\"string\">'abcd'</span>, <span class=\"number\">786</span>, <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>, <span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>]</span><br><span class=\"line\">列</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">reverseWords</span><span class=\"params\">(input)</span>:</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"comment\"># 通过空格将字符串分隔符，把各个单词分隔为列表</span></span><br><span class=\"line\">    inputWords = input.split(<span class=\"string\">\" \"</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 翻转字符串</span></span><br><span class=\"line\">    <span class=\"comment\"># 假设列表 list = [1,2,3,4],  </span></span><br><span class=\"line\">    <span class=\"comment\"># list[0]=1, list[1]=2 ，而 -1 表示最后一个元素 list[-1]=4 ( 与 list[3]=4 一样)</span></span><br><span class=\"line\">    <span class=\"comment\"># inputWords[-1::-1] 有三个参数</span></span><br><span class=\"line\">    <span class=\"comment\"># 第一个参数 -1 表示最后一个元素</span></span><br><span class=\"line\">    <span class=\"comment\"># 第二个参数为空，表示移动到列表末尾</span></span><br><span class=\"line\">    <span class=\"comment\"># 第三个参数为步长，-1 表示逆向</span></span><br><span class=\"line\">    inputWords=inputWords[<span class=\"number\">-1</span>::<span class=\"number\">-1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 重新组合字符串</span></span><br><span class=\"line\">    output = <span class=\"string\">' '</span>.join(inputWords)</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> output</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    input = <span class=\"string\">'I like runoob'</span></span><br><span class=\"line\">    rw = reverseWords(input)</span><br><span class=\"line\">    print(rw)</span><br><span class=\"line\">runoob like I</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-3-Tuple操作\"><a href=\"#2-3-Tuple操作\" class=\"headerlink\" title=\"2.3 Tuple操作\"></a>2.3 Tuple操作</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tuple = ( <span class=\"string\">'abcd'</span>, <span class=\"number\">786</span> , <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>  )</span><br><span class=\"line\">tinytuple = (<span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">print</span> (tuple)             <span class=\"comment\"># 输出完整元组</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tuple[<span class=\"number\">0</span>])          <span class=\"comment\"># 输出元组的第一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tuple[<span class=\"number\">1</span>:<span class=\"number\">3</span>])        <span class=\"comment\"># 输出从第二个元素开始到第三个元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tuple[<span class=\"number\">2</span>:])         <span class=\"comment\"># 输出从第三个元素开始的所有元素</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tinytuple * <span class=\"number\">2</span>)     <span class=\"comment\"># 输出两次元组</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tuple + tinytuple) <span class=\"comment\"># 连接元组</span></span><br><span class=\"line\">(<span class=\"string\">'abcd'</span>, <span class=\"number\">786</span>, <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>)</span><br><span class=\"line\">abcd</span><br><span class=\"line\">(<span class=\"number\">786</span>, <span class=\"number\">2.23</span>)</span><br><span class=\"line\">(<span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>)</span><br><span class=\"line\">(<span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>)</span><br><span class=\"line\">(<span class=\"string\">'abcd'</span>, <span class=\"number\">786</span>, <span class=\"number\">2.23</span>, <span class=\"string\">'runoob'</span>, <span class=\"number\">70.2</span>, <span class=\"number\">123</span>, <span class=\"string\">'runoob'</span>)</span><br><span class=\"line\"><span class=\"number\">2.4</span> Set操作</span><br><span class=\"line\">student = &#123;<span class=\"string\">'Tom'</span>, <span class=\"string\">'Jim'</span>, <span class=\"string\">'Mary'</span>, <span class=\"string\">'Tom'</span>, <span class=\"string\">'Jack'</span>, <span class=\"string\">'Rose'</span>&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">print(student)   <span class=\"comment\"># 输出集合，重复的元素被自动去掉</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 成员测试</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">'Rose'</span> <span class=\"keyword\">in</span> student :</span><br><span class=\"line\">    print(<span class=\"string\">'Rose 在集合中'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> :</span><br><span class=\"line\">    print(<span class=\"string\">'Rose 不在集合中'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># set可以进行集合运算</span></span><br><span class=\"line\">a = set(<span class=\"string\">'abracadabra'</span>)</span><br><span class=\"line\">b = set(<span class=\"string\">'alacazam'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">print(a)</span><br><span class=\"line\"> </span><br><span class=\"line\">print(a - b)     <span class=\"comment\"># a 和 b 的差集</span></span><br><span class=\"line\"> </span><br><span class=\"line\">print(a | b)     <span class=\"comment\"># a 和 b 的并集</span></span><br><span class=\"line\"> </span><br><span class=\"line\">print(a &amp; b)     <span class=\"comment\"># a 和 b 的交集</span></span><br><span class=\"line\"> </span><br><span class=\"line\">print(a ^ b)     <span class=\"comment\"># a 和 b 中不同时存在的元素</span></span><br><span class=\"line\">&#123;<span class=\"string\">'Tom'</span>, <span class=\"string\">'Mary'</span>, <span class=\"string\">'Rose'</span>, <span class=\"string\">'Jim'</span>, <span class=\"string\">'Jack'</span>&#125;</span><br><span class=\"line\">Rose 在集合中</span><br><span class=\"line\">&#123;<span class=\"string\">'c'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'r'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'a'</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">'d'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'r'</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">'z'</span>, <span class=\"string\">'c'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'m'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'r'</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'l'</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">'a'</span>, <span class=\"string\">'c'</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">'b'</span>, <span class=\"string\">'z'</span>, <span class=\"string\">'r'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'m'</span>, <span class=\"string\">'l'</span>&#125;</span><br><span class=\"line\"><span class=\"number\">2.5</span> Dictionary操作</span><br><span class=\"line\">dict = &#123;&#125;</span><br><span class=\"line\">dict[<span class=\"string\">'one'</span>] = <span class=\"string\">\"1 - 菜鸟教程\"</span></span><br><span class=\"line\">dict[<span class=\"number\">2</span>]     = <span class=\"string\">\"2 - 菜鸟工具\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">tinydict = &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'runoob'</span>,<span class=\"string\">'code'</span>:<span class=\"number\">1</span>, <span class=\"string\">'site'</span>: <span class=\"string\">'www.runoob.com'</span>&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">print</span> (dict[<span class=\"string\">'one'</span>])       <span class=\"comment\"># 输出键为 'one' 的值</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (dict[<span class=\"number\">2</span>])           <span class=\"comment\"># 输出键为 2 的值</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tinydict)          <span class=\"comment\"># 输出完整的字典</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tinydict.keys())   <span class=\"comment\"># 输出所有键</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> (tinydict.values()) <span class=\"comment\"># 输出所有值</span></span><br><span class=\"line\"><span class=\"number\">1</span> - 菜鸟教程</span><br><span class=\"line\"><span class=\"number\">2</span> - 菜鸟工具</span><br><span class=\"line\">&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'runoob'</span>, <span class=\"string\">'code'</span>: <span class=\"number\">1</span>, <span class=\"string\">'site'</span>: <span class=\"string\">'www.runoob.com'</span>&#125;</span><br><span class=\"line\">dict_keys([<span class=\"string\">'name'</span>, <span class=\"string\">'code'</span>, <span class=\"string\">'site'</span>])</span><br><span class=\"line\">dict_values([<span class=\"string\">'runoob'</span>, <span class=\"number\">1</span>, <span class=\"string\">'www.runoob.com'</span>])</span><br><span class=\"line\">修改dict</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'修改前:'</span>,tinydict)</span><br><span class=\"line\">tinydict[<span class=\"string\">'code'</span>]+=<span class=\"number\">1</span></span><br><span class=\"line\">print(<span class=\"string\">'修改后:'</span>,tinydict)</span><br><span class=\"line\">修改前: &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'runoob'</span>, <span class=\"string\">'code'</span>: <span class=\"number\">1</span>, <span class=\"string\">'site'</span>: <span class=\"string\">'www.runoob.com'</span>&#125;</span><br><span class=\"line\">修改后: &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'runoob'</span>, <span class=\"string\">'code'</span>: <span class=\"number\">2</span>, <span class=\"string\">'site'</span>: <span class=\"string\">'www.runoob.com'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\">wordcount = &#123;<span class=\"string\">\"interesting\"</span>:<span class=\"number\">20</span>,<span class=\"string\">\"is\"</span>:<span class=\"number\">30</span>,<span class=\"string\">\"data\"</span>:<span class=\"number\">50</span>,<span class=\"string\">\"mining\"</span>:<span class=\"number\">40</span>,<span class=\"string\">\"to\"</span>:<span class=\"number\">8</span>,<span class=\"string\">\"be\"</span>:<span class=\"number\">16</span>,<span class=\"string\">\"or\"</span>:<span class=\"number\">10</span>,<span class=\"string\">\"not\"</span>:<span class=\"number\">12</span>,<span class=\"string\">\"a\"</span>:<span class=\"number\">8</span>,<span class=\"string\">\"problem\"</span>:<span class=\"number\">8</span>,<span class=\"string\">\"yes\"</span>:<span class=\"number\">6</span>,<span class=\"string\">\"we\"</span>:<span class=\"number\">6</span>,<span class=\"string\">\"like\"</span>:<span class=\"number\">5</span>,<span class=\"string\">\"it\"</span>:<span class=\"number\">4</span>&#125;</span><br><span class=\"line\">sorted_dict_list = sorted(wordcount.items(),key = <span class=\"keyword\">lambda</span> item:item[<span class=\"number\">1</span>], reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\">print(sorted_dict_list)</span><br><span class=\"line\">topk_dict = &#123;&#125;</span><br><span class=\"line\">k=<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> sorted_dict_list[:k]:</span><br><span class=\"line\">    topk_dict[k]=v</span><br><span class=\"line\">print(topk_dict)</span><br><span class=\"line\">[(<span class=\"string\">'data'</span>, <span class=\"number\">50</span>), (<span class=\"string\">'mining'</span>, <span class=\"number\">40</span>), (<span class=\"string\">'is'</span>, <span class=\"number\">30</span>), (<span class=\"string\">'interesting'</span>, <span class=\"number\">20</span>), (<span class=\"string\">'be'</span>, <span class=\"number\">16</span>), (<span class=\"string\">'not'</span>, <span class=\"number\">12</span>), (<span class=\"string\">'or'</span>, <span class=\"number\">10</span>), (<span class=\"string\">'to'</span>, <span class=\"number\">8</span>), (<span class=\"string\">'a'</span>, <span class=\"number\">8</span>), (<span class=\"string\">'problem'</span>, <span class=\"number\">8</span>), (<span class=\"string\">'yes'</span>, <span class=\"number\">6</span>), (<span class=\"string\">'we'</span>, <span class=\"number\">6</span>), (<span class=\"string\">'like'</span>, <span class=\"number\">5</span>), (<span class=\"string\">'it'</span>, <span class=\"number\">4</span>)]</span><br><span class=\"line\">&#123;<span class=\"string\">'data'</span>: <span class=\"number\">50</span>, <span class=\"string\">'mining'</span>: <span class=\"number\">40</span>, <span class=\"string\">'is'</span>: <span class=\"number\">30</span>, <span class=\"string\">'interesting'</span>: <span class=\"number\">20</span>, <span class=\"string\">'be'</span>: <span class=\"number\">16</span>, <span class=\"string\">'not'</span>: <span class=\"number\">12</span>, <span class=\"string\">'or'</span>: <span class=\"number\">10</span>, <span class=\"string\">'to'</span>: <span class=\"number\">8</span>, <span class=\"string\">'a'</span>: <span class=\"number\">8</span>, <span class=\"string\">'problem'</span>: <span class=\"number\">8</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>安装wordcloud到开发环境</p>\n<p>wordcloud的文档可以参考如下网页 <a href=\"http://amueller.github.io/word_cloud/auto_examples/index.html#example-gallery\" target=\"_blank\" rel=\"noopener\">http://amueller.github.io/word_cloud/auto_examples/index.html#example-gallery</a></p>\n<blockquote>\n<p>!pip install wordcloud<br>Requirement already satisfied: wordcloud in c:\\anaconda3\\lib\\site-packages (1.5.0)<br>Requirement already satisfied: numpy&gt;=1.6.1 in c:\\anaconda3\\lib\\site-packages (from wordcloud) (1.16.2)<br>Requirement already satisfied: pillow in c:\\anaconda3\\lib\\site-packages (from wordcloud) (5.1.0)<br>requests 2.18.4 has requirement urllib3&lt;1.23,&gt;=1.21.1, but you’ll have urllib3 1.24.1 which is incompatible.<br>py2neo 4.2.0 has requirement prompt-toolkit&lt;2.1,&gt;=2.0.7, but you’ll have prompt-toolkit 1.0.15 which is incompatible.<br>boto3 1.8.2 has requirement botocore&lt;1.12.0,&gt;=1.11.2, but you’ll have botocore 1.10.55 which is incompatible.<br>You are using pip version 10.0.1, however version 19.2.3 is available.<br>You should consider upgrading via the ‘python -m pip install –upgrade pip’ command.</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">​</span><br><span class=\"line\">mywc = WordCloud().fit_words(topk_dict)</span><br><span class=\"line\">plt.imshow(mywc)</span><br><span class=\"line\">plt.axis(<span class=\"string\">\"off\"</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">'wordcloud.png'</span>,dpi=<span class=\"number\">600</span>)<span class=\"comment\">#保存图片到指定目录</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&lt;Figure size <span class=\"number\">640</span>x480 <span class=\"keyword\">with</span> <span class=\"number\">1</span> Axes&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-读写文件\"><a href=\"#3-读写文件\" class=\"headerlink\" title=\"3. 读写文件\"></a>3. 读写文件</h1><h2 id=\"3-1-从按行存储的文本文件中读取\"><a href=\"#3-1-从按行存储的文本文件中读取\" class=\"headerlink\" title=\"3.1 从按行存储的文本文件中读取\"></a>3.1 从按行存储的文本文件中读取</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">records = []</span><br><span class=\"line\">words = []</span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"shakespeare.txt\"</span>,<span class=\"string\">'r'</span>,encoding=<span class=\"string\">\"utf-8\"</span>) <span class=\"keyword\">as</span> fin:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fin:</span><br><span class=\"line\">        records.append(line.strip())</span><br><span class=\"line\">        words.extend(line.strip().split(<span class=\"string\">' '</span>))</span><br><span class=\"line\">print(<span class=\"string\">\"第一行：\"</span>,records[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(<span class=\"string\">\"最后一行:\"</span>,records[<span class=\"number\">1</span>])</span><br><span class=\"line\">print(<span class=\"string\">\"总行数：\"</span>,len(records))</span><br><span class=\"line\">print(<span class=\"string\">\"总字数：\"</span>,len(words))</span><br><span class=\"line\">print(<span class=\"string\">\"不重复的字数：\"</span>,len(set(words)))</span><br><span class=\"line\">print(<span class=\"string\">\"前十个字：\"</span>,words[:<span class=\"number\">10</span>])</span><br><span class=\"line\">第一行： First Citizen:</span><br><span class=\"line\">最后一行: Before we proceed any further, hear me speak.</span><br><span class=\"line\">总行数： <span class=\"number\">40000</span></span><br><span class=\"line\">总字数： <span class=\"number\">209888</span></span><br><span class=\"line\">不重复的字数： <span class=\"number\">25671</span></span><br><span class=\"line\">前十个字： [<span class=\"string\">'First'</span>, <span class=\"string\">'Citizen:'</span>, <span class=\"string\">'Before'</span>, <span class=\"string\">'we'</span>, <span class=\"string\">'proceed'</span>, <span class=\"string\">'any'</span>, <span class=\"string\">'further,'</span>, <span class=\"string\">'hear'</span>, <span class=\"string\">'me'</span>, <span class=\"string\">'speak.'</span>]</span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"words.txt\"</span>,<span class=\"string\">\"w\"</span>,encoding=<span class=\"string\">\"utf-8\"</span>) <span class=\"keyword\">as</span> fout:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> words[:<span class=\"number\">100</span>]:</span><br><span class=\"line\">        fout.write(word+<span class=\"string\">\"\\n\"</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-练习题\"><a href=\"#4-练习题\" class=\"headerlink\" title=\"4. 练习题\"></a>4. 练习题</h1><p>读取Shakespeare.txt，统计词频，找出出现频次top50的词，并画出词云。</p>\n<p>python基础知识参考教程 <a href=\"https://www.runoob.com/python3/python3-tutorial.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/python3/python3-tutorial.html</a></p>\n","categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"}]}